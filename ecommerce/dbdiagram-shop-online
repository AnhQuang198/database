//schema public, users, shops, products, commons, orders

//Table City
Table public.city {
  id int [pk, increment, not null] // auto-increment
  city_name varchar(100) [not null]
  created_at timestamp
  updated_at timestamp
}

//Table District
Table public.district {
  id int [pk, increment, not null] // auto-increment
  city_id int [not null]
  full_address varchar(200)
  district_name varchar(100) [not null]
  created_at timestamp
  updated_at timestamp
}

//Table Ward
Table public.ward {
  id int [pk, increment, not null] // auto-increment
  district_id int [not null]
  full_address varchar(200)
  ward_name varchar(100) [not null]
  created_at timestamp
  updated_at timestamp
}

//Table Category
Table public.category {
  id bigint [pk, increment, not null] // auto-increment
  name varchar(45)
  image_url varchar(100)
  tree_path varchar(50) [note: 'path level vd: 1,3,5']
  level int [note: 'level of category']
  parent_id int [note: 'id parent of category']
  is_active boolean [default: true]
  created_at timestamp
  updated_at timestamp
}

//Table User
Table users.user {
  id bigint [pk, increment, not null] // auto-increment
  phone varchar(15) [unique]
  email varchar(50) [not null, unique]
  password_crypt varchar(100)
  state ENUM('ACTIVE', 'NOT_ACTIVE') [default: 'NOT_ACTIVE', note: 'status of user']
  role ENUM('ADMIN', 'MEMBER', 'STAFF', 'MANAGER') [default: 'MEMBER']
  is_locked boolean [default: false]
  provider ENUM('LOCAL', 'GOOGLE', 'FACEBOOK', 'GITHUB') [default: 'LOCAL', note: 'user login oauth or local']
  name varchar(45)
  gender tinyint(1)
  dob varchar(45) [note: 'date of birth']
  avatar_url varchar(100)
  confirmed_by varchar(45) [note: 'với role MEMBER thì mặc định là SYSTEM, với các role còn lại thì lưu name của người duyệt']
  confirmed_at timestamp
  created_at timestamp
  updated_at timestamp
}

//Table User Address
Table users.user_adress {
  id bigint [pk, increment, not null] // auto-increment
  user_id bigint [not null]
  full_name varchar(100) [not null]
  phone varchar(15) [not null]
  city_id int [not null]
  district_id int [not null]
  ward_id int [not null]
  add_detail varchar(300)
  type ENUM('OFFICE', 'HOME') [default: 'HOME']
  is_default boolean [default: false]
  created_at timestamp
  updated_at timestamp
}

//Table Payment
Table users.payment {
  id bigint [pk, increment, not null] // auto-increment
  object_id bigint [not null, note: 'user_id or shop_id']
  type ENUM('CARD', 'BANK') [note: 'CARD:Thẻ tín dụng/Ghi nợ, BANK: tài khoản ngân hàng']
  account_no varchar(20) [note: 'Số tài khoản']
  account_holder varchar(50) [note: 'Tên chủ tài khoản']
  bank_name varchar(50) [note: 'Tên ngân hàng']
  bank_branch_name varchar(200) [note: 'Chi nhánh ngân hàng']
  state ENUM('PENDING', 'VERIFIED') [default: 'PENDING', note: 'PENDING: chờ xác minh, VERIFIED: đã xác minh']
  is_default boolean [default: false, note: 'TK thanh toán mặc định (1 tài khoản phải có 1 loại thanh toán mặc định']
  created_at timestamp
  updated_at timestamp
}

//Table Rating
Table commons.rating {
  id bigint [pk, increment, not null] // auto-increment
  product_id bigint [not null, note: 'id của sản phẩm được rate']
  user_id bigint [not null, note: 'id người dánh giá']
  rate_star int [not null, note: 'số sao rate cho sản phẩm']
  is_reported boolean [default: false, note: 'đánh giá bị báo cáo']
  created_at timestamp
  updated_at timestamp
}

//Table Rating detail
Table commons.rating_detail {
  id bigint [pk, increment, not null] // auto-increment
  rating_id bigint [not null, note: 'id rating']
  comment_content tinytext [note: 'đánh giá chi tiết']
  image_urls tinytext [note: 'danh sách ảnh']
  parent_id int [note: 'id comment của rating_detail cha']
  level int [note: 'cấp của comment']
  tree_path varchar(50) [note: 'path level']
  created_at timestamp
  updated_at timestamp
}

//Table Rating total
Table commons.rating_total {
  id bigint [pk, increment, not null] // auto-increment
  product_id bigint [not null, note: 'id của sản phẩm được rate']
  rate_star_avg float [not null]
  total_five_star int [default: 0]
  total_four_star int [default: 0]
  total_three_star int [default: 0]
  total_two_star int [default: 0]
  total_one_star int [default: 0]
  total_comment int [default: 0]
  total_comment_with_img int [default: 0]
  created_at timestamp
  updated_at timestamp
}

//Table Rating reported
Table commons.rating_report {
  id bigint [pk, increment, not null] // auto-increment
  rating_id bigint [not null]
  message_config_id int
  message_content varchar(200)
  state ENUM('PENDING', 'VERIFIED') [default: 'PENDING', note: 'PENDING: chờ xác minh, VERIFIED: đã xác minh']
  created_at timestamp
  updated_at timestamp
}

//Table Config common system
Table commons.config {
  id bigint [pk, increment, not null] // auto-increment
  config_name varchar(200) [not null, note: 'Tên cấu hình']
  config_code varchar(200) [not null, note: 'Code của cấu hình']
  config_parent_id bigint [note: 'id danh mục cha']
  tree_path varchar(50) [note: 'path level vd: 1,3,5']
  is_active boolean [default: true]
  description varchar(500)
  created_at timestamp
  updated_at timestamp
}

//Table Config message (Chứa cấu hình những message mặc định)
Table commons.item_config {
  id bigint [pk, increment, not null] // auto-increment
  config_id bigint [not null, note: 'Lưu id cấu hình']
  item_name varchar(200)
  item_code varchar(200)
  item_value varchar(200)
  tree_path varchar(50) [note: 'path level vd: 1,3,5']
  item_parent_id bigint
  is_active boolean [default: true]
  created_at timestamp
  updated_at timestamp
}

//Table Config event (Chứa cấu hình những event đang chạy)
Table commons.event {
  id int [pk, increment, not null] // auto-increment
  event_name varchar(45) [not null, note: 'Tên sự kiện']
  start_time timestamp [note: 'Thời gian bắt đầu sự kiện']
  end_time timestamp [note: 'Thời gian kết thúc sự kiện']
  description largetext [note: 'Mô tả chi tiết sự kiện']
  is_active boolean [default: true]
  created_at timestamp
  updated_at timestamp
  create_by varchar(45) [note: 'lưu name trong bảng user']
  updated_by varchar(45) [note: 'lưu name trong bảng user']
}

//Table Lưu tất cả ảnh banner của hệ thống
Table commons.banner {
  id int [pk, increment, not null] // auto-increment'
  event_id int [note: 'Id của event']
  image_url varchar(100) [note: 'ảnh của sự kiện']
  position int [note: 'vị trí hiển thị']
  type ENUM('EVENT', 'HEADER', 'FOOTER')
  is_active boolean [default: true]
  created_at timestamp
  updated_at timestamp
  create_by varchar(45) [note: 'lưu name trong bảng user']
  updated_by varchar(45) [note: 'lưu name trong bảng user']
}

//Table lưu voucher
Table commons.voucher {
  id int [pk, increment, not null] // auto-increment'
  name varchar(100) [not null, note: 'Tên voucher']
  code varchar(100) [not null, note: 'Mã code để nhập vào']
  description largetext [note: 'Mô tả chi tiết voucher']
  image_url varchar(100) [note: 'ảnh của sự kiện']
  price_discount double [note: 'giá tiền đc giảm']
  percent_discount int [note: '% tiền đc giảm']
  price_min_condition double [note: 'giá tối thiểu để sử dụng voucher']
  price_max_condition double [note: 'giá tối đa để sử dụng voucher']
  quantity int [not null, note: 'số lượng voucher']
  event_id int [note: 'id của sự kiện']
  type ENUM('EVENT', 'NORMAL', 'DELIVERY', 'SPECIAL')
  start_time timestamp [not null, note: 'thời gian bắt đầu có thể dùng (nếu voucher theo sự kiện thì sẽ mặc định bằng thời gian bắt đầu sự kiện)']
  end_time timestamp [not null, note: 'thời gian kết thúc có thể dùng (nếu voucher theo sự kiện thì sẽ mặc định bằng thời gian kết thúc sự kiện)']
  is_active boolean [default: true]
  created_at timestamp
  updated_at timestamp
  create_by varchar(45) [note: 'lưu name trong bảng user']
  updated_by varchar(45) [note: 'lưu name trong bảng user']
}

//Table lưu voucher log
Table commons.voucher_log {
  id bigint [pk, increment, not null] // auto-increment'
  voucher_id int [not null, note: 'id của voucher']
  voucher_name varchar(100) [not null, note: 'Tên voucher']
  voucher_code varchar(100) [not null, note: 'Mã code để nhập vào']
  user_id bigint [not null, note: 'id người sử dụng voucher']
  order_id bigint [not null, note: 'đơn hàng sử dụng voucher']
  created_at timestamp
  updated_at timestamp
}

//Table lưu thông tin sản phẩm
Table products.product {
  id bigint [pk, increment, not null] // auto-increment'
  category_id bigint [not null, note: 'Danh mục của sản phẩm']
  name varchar(100) [not null, note: 'Tên sản phẩm']
  code varchar(100) [not null, note: 'Mã sản phẩm']
  image_urls tinytext [note: 'danh sách ảnh sản phẩm (tối đa 3 ảnh)']
  tags int [note: 'lưu item_config_id với các tag được cấu hình trước']
  brand int [note: 'lưu item_config_id với các brand được cấu hình trước']
  original_price double [not null, note: 'giá gốc của sản phẩm']
  variants varchar(50) [note: 'lưu id trong bảng commons.config (id của phân loại ở dạng id1, id2)']
  description largetext [note: 'mô tả sản phẩm (lưu dạng html)']
  is_active boolean [default: true]
  created_at timestamp
  updated_at timestamp
  create_by varchar(45) [note: 'lưu name trong bảng user']
  updated_by varchar(45) [note: 'lưu name trong bảng user']
}

//Table lưu phân loại sản phẩm
Table products.product_variant {
  id bigint [pk, increment, not null] // auto-increment'
  product_id bigint [not null, note: 'id sản phẩm']
  image_url varchar(100) [note: 'lưu ảnh của phân loại sản phẩm']
  weight float [note: 'cân nặng (sử dụng khi vận chuyển)']
  width float [note: 'chiều rộng (sử dụng khi vận chuyển)']
  height float [note: 'chiều cao (sử dụng khi vận chuyển)']
  length float [note: 'chiều dài (sử dụng khi vận chuyển)']
  first_attribute_id bigint [note: 'lưu id phân loại thứ 1 được cấu hình trong bảng commons.config']
  first_attribute_value_id bigint [note: 'lưu id phân loại thứ 1 được cấu hình trong bảng commons.item_config']
  second_attribute_id bigint [note: 'lưu id phân loại thứ 2 được cấu hình trong bảng commons.config']
  second_attribute_value_id bigint [note: 'lưu id phân loại thứ 2 được cấu hình trong bảng commons.item_config']
  quantity double [not null, note: 'số lượng sản phẩm còn trong kho']
  sale_price double [not null, note: 'giá bán ra của sản phẩm theo phâm loại']
  is_active boolean [default: true]
  created_at timestamp
  updated_at timestamp
  create_by varchar(45) [note: 'lưu name trong bảng user']
  updated_by varchar(45) [note: 'lưu name trong bảng user']
}

//Table lưu log cập nhật của bảng sản phẩm
Table products.product_log {
  id bigint [pk, increment, not null] // auto-increment'
  product_id bigint [not null, note: 'id sản phẩm']
  total_rate bigint [default: 0, note: 'số lượng đánh giá (chạy schedule tổng hợp)']
  total_sold bigint [default: 0, note: 'số lượng đã bán (đơn hàng ở trạng thái hoàn thành) (chạy schedule tổng hợp)']
  avg_rate_star float [default: 0.0, note: 'số sao đánh giá trung bình (chạy schedule tổng hợp)']
  log largetext [note: 'lưu log cập nhật sản phẩm trong 30 ngày']
  created_at timestamp
  updated_at timestamp
}

//Table order, order_log, shipping, shipping_log

// Creating references
// You can also define relaionship separately
// > many-to-one; < one-to-many; - one-to-one; <> many-to-many

Ref: users.payment.object_id > users.user.id

Ref: users.user_adress.user_id > users.user.id 

Ref: public.district.city_id > public.city.id

Ref: public.ward.district_id > public.district.id

Ref: commons.rating.id < commons.rating_detail.rating_id

Ref: commons.rating.id - commons.rating_report.rating_id

Ref: commons.event.id < commons.banner.event_id

Ref: commons.voucher.id < commons.voucher_log.voucher_id

Ref: products.product.category_id > public.category.id

Ref: products.product.id < products.product_variant.product_id

Ref: products.product.id - products.product_log.product_id
